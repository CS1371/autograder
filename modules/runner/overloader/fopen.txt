function [varargout] = fopen(varargin)
    BANNED = {'.m', '.p', '.mlappinstall', '.mlapp'};
    stack = dbstack;
    if nargout == 0
        varargout = cell(1);
    else
        varargout = cell(1, nargout);
    end
    isValid = true;
    % If they call readtable for a text file, it can sometimes set the encoding.
    % Setting the encoding involves fopening itself (the .m file), but then
    % closes itself. In this instance, we are valid.
    if any(strcmp({stack.name}, 'runner')) && ~any(strcmp({stack.name}, 'EncodingInput.set.Encoding'))
        % do checks
        % check that they don't try to open a file OTHER than .txt
        % first check they gave inputs
        if nargin ~= 0
            % check filename
            if ischar(varargin{1})
                varargin{1} = string(varargin{1});
            end
            if isstring(varargin{1}) ...
                    && ~strcmp(varargin{1}, 'all') ...
                    && endsWith(varargin{1}, BANNED, 'IgnoreCase', true)
                isValid = false;
            end
        end
    end
    if isValid
        [varargout{:}] = builtin('fopen', varargin{:});
    else
        % throw error
        throw(MException('Autograder:fopen:invalidFileType', ...
            'Code tried to open invalid file type'));
    end
end