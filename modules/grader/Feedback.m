%% Feedback: Represents Feedback 
%
% This class represents feedback for a specific TestCase.
%
%%% Fields
%
% * testCase: The TestCase for this feedback
%
% * problem: The problem name for this feedback
%
% * isPassed: True if the student passed this test completely
%
% * images: A File array that represents all the images produced by the 
%           student
%
% * files: A File array that represents all the files produced by the
%          student
%
% * plots: A Plot array that represents all the plots generated by the
%          student
%
% * reason: A string that represents the reason the student did not get
%           full credit
%
% * points: The number of points earned for this test case
%
%%% Methods
%
% * Feedback
% * generateFeedback
%
%%% Remarks
%
%
classdef Feedback < handle
    properties (Access = public)
        testCase;
        problem;
        isPassed;
        images;
        files;
        plots;
        reason;
        points;
        isRecursive;
    end
    methods (Access = public)
        %% Constructor
        %
        % The constructor creates a new Feedback from a TestCase. 
        %
        % this = Feedback(testCase) will return a Feedback with the
        %        testCase field assigned. The rest of the fields will be
        %        assigned by the gradeProblem function
        %
        %%% Remarks
        %
        % I think this is how the constructor works. It may take in the
        % other properties as well, but I remember reading somewhere that
        % the constructor only takes in the TestCase. However, it might be
        % better and more efficient to have the constructor take inputs for
        % the other properties as well.
        %
        %%% Exceptions
        %
        % An AUTOGRADER:FEEDBACK:INVALIDTESTCASE exception will be thrown
        % if the testCase is incorrectly formatted or missing information
        %
        %%% Unit Tests
        %
        % Given a valid TestCase:
        % testCase will contain the given TestCase
        % all other properties will be empty
        %
        % Given an invalid TestCase:
        % an AUTOGRADER:FEEDBACK:INVALIDTESTCASE exception will be thrown
        %
        %
        function [this] = Feedback(aTestCase)
            this.testCase = aTestCase;
            this.isRecursive = false;
        end
        %% generateFeedback: Generates HTML feedback 
        %
        % The function genreates complete HTML feedback for the specific
        % feedback 
        % [htmlFeed] = generateFeedback(this) generates the complete html
        % feedback for this based on the information stored in the
        % properties
        %
        %%% Remarks
        %
        %
        %
        %%% Exceptions
        %
        % An AUTOGRADER:FEEDBACK:GENERATEFEEDBACK:INVALIDFEEDBACK exception
        % will be thrown if no Feedback is given or the given Feedback has
        % insufficient or missing data
        %
        %%% Unit Tests
        %
        % Given a vaild Feedback:
        % a correct and complete html feedback will be output based on the
        % properties of the feedback file
        %
        % Given an invalid Feedback: 
        % an AUTOGRADER:FEEDBACK:GENERATEFEEDBACK:INVALIDFEEDBACK exception
        % will be thrown
        %
        %
        function [htmlFeed] = generateFeedback(this)
            
        end
    end
end